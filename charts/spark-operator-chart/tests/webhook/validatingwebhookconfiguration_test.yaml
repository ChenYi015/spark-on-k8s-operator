#
# Copyright 2024 The Kubeflow authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

suite: Test validating webhook configuration

templates:
  - webhook/validatingwebhookconfiguration.yaml

release:
  name: spark-operator
  namespace: spark-operator

tests:
  - it: Should not create the validating webhook configuration by default
    asserts:
      - hasDocuments:
          count: 0

  - it: Should not create the validating webhook configuration with webhook disabled even if `resourceQuotaEnforcement.enable` is true
    set:
      resourceQuotaEnforcement:
        enable: true
    asserts:
      - hasDocuments:
          count: 0

  - it: Should create the validating webhook configuration if `webhook.enable` and `resourceQuotaEnforcement.enable` are both true
    set:
      webhook:
        enable: true
      resourceQuotaEnforcement:
        enable: true
    asserts:
      - containsDocument:
          apiVersion: admissionregistration.k8s.io/v1
          kind: ValidatingWebhookConfiguration
          name: spark-operator-webhook

  - it: Should use the specified webhook port
    set:
      webhook:
        enable: true
        port: 12345
      resourceQuotaEnforcement:
        enable: true
    asserts:
      - equal:
          path: webhooks[?(@.name == "quotaenforcer.sparkoperator.k8s.io")].clientConfig.service.port
          value: 12345

  - it: Should use the specified failure policy
    set:
      webhook:
        enable: true
        failurePolicy: Fail
      resourceQuotaEnforcement:
        enable: true
    asserts:
      - equal:
          path: webhooks[?(@.name == "quotaenforcer.sparkoperator.k8s.io")].failurePolicy
          value: Fail

  - it: Should set namespaceSelector if `spark.jobNamespaces` is not empty
    set:
      webhook:
        enable: true
      spark.jobNamespaces:
        - ns1
        - ns2
        - ns3
      resourceQuotaEnforcement:
        enable: true
    asserts:
      - equal:
          path: webhooks[?(@.name == "quotaenforcer.sparkoperator.k8s.io")].namespaceSelector
          value:
            matchExpressions:
              - key: kubernetes.io/metadata.name
                operator: In
                values:
                  - ns1
                  - ns2
                  - ns3

  - it: Should should use the specified timeoutSeconds
    set:
      webhook:
        enable: true
        timeoutSeconds: 5
      resourceQuotaEnforcement:
        enable: true
    asserts:
      - equal:
          path: webhooks[?(@.name == "quotaenforcer.sparkoperator.k8s.io")].timeoutSeconds
          value: 5
