{{- if .Values.webhook.enable -}}
{{ $sparkJobNameSpaces := default (list "default") .Values.sparkJobNamespaces }}
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "spark-operator.webhookName" . }}
  labels:
    {{- include "spark-operator.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/inject-ca-from-secret: {{ .Release.Namespace }}/{{ include "spark-operator.webhookSecretName" . }}
webhooks:
- name: webhook.sparkoperator.k8s.io
  admissionReviewVersions: ["v1"]
  clientConfig:
    service:
      name: {{ include "spark-operator.webhookServiceName" . }}
      namespace: {{ .Release.Namespace }}
      port: {{ .Values.webhook.port }}
      path: /webhook
  sideEffects: NoneOnDryRun
  failurePolicy: {{ .Values.webhook.failurePolicy }}
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: In
      values:
      {{- range $sparkJobNameSpaces }}
      - {{ . }}
      {{- end }}
  objectSelector:
    matchLabels:
      sparkoperator.k8s.io/launched-by-spark-operator: "true"
    matchExpressions:
    - key: sparkoperator.k8s.io/app-name
      operator: Exists
    - key: spark-role
      operator: Exists
  rules:
  - apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
    operations: ["CREATE"]
  {{- with .Values.webhook.timeoutSeconds }}
  timeoutSeconds: {{ . }}
  {{- end }}

---
{{- if .Values.resourceQuotaEnforcement.enable -}}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "spark-operator.webhookName" . }}
  labels:
    {{- include "spark-operator.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/inject-ca-from-secret: {{ .Release.Namespace }}/{{ include "spark-operator.webhookSecretName" . }}
webhooks:
- name: quotaenforcer.sparkoperator.k8s.io
  admissionReviewVersions: ["v1"]
  clientConfig:
    service:
      name: {{ include "spark-operator.webhookServiceName" . }}
      namespace: {{ .Release.Namespace }}
      port: {{ .Values.webhook.port }}
      path: /webhook
  sideEffects: NoneOnDryRun
  failurePolicy: {{ .Values.webhook.failurePolicy }}
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: In
      values: 
      {{- range $sparkJobNameSpaces }}
      - {{ . }}
      {{- end }} 
  objectSelector:
    matchLabels:
      sparkoperator.k8s.io/launched-by-spark-operator: "true"
    matchExpressions:
    - key: sparkoperator.k8s.io/app-name
      operator: Exists
    - key: spark-role
      operator: Exists
  rules:
  - apiGroups: ["sparkoperator.k8s.io"]
    apiVersions: ["v1beta2"]
    resources: ["sparkapplications", "scheduledsparkapplications"]
    operations: ["CREATE", "UPDATE"]
  {{- with .Values.webhook.timeoutSeconds }}
  timeoutSeconds: {{ . }}
  {{- end }}
{{- end }}
{{- end }}
